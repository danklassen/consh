{"name":"Consh","google":"","body":"consh\r\n=====\r\n\r\nAt the moment this has only been tested on an ubuntu workstation connecting to an ubuntu server. As far as I know there isn't any reason it shouldn't work on any *nix setup though.\r\n\r\nconcrete5 shell scripts\r\n\r\nThis is the base of a set of concrete5 scripts to ease the management of dev and live environments. At the moment the only functionality is pulling a remote database, and rsyncing the files directory.\r\n\r\ngeneral syntax is similiar to rake tasks.\r\n\r\n```consh db:pull```\r\n\r\n```consh files:pull```\r\n\r\nCommands can be added in to the commands folder and must extend the base command object. When a user runs ```consh fun:task```\r\nthe method ```FunTask->run()``` will be called. FunTask should be defined in ```commands/fun/task.php```\r\n\r\nsetup\r\n=====\r\n\r\nYou will need php's ssh2 library installed. For ubuntu: ```sudo apt-get install libssh2-php``` Other distos may have something similiar or you can install it using PECL\r\n\r\n* ```git clone``` this repo\r\n* ```symlink``` (I know... there should be a better way) the consh script to your bin folder (ie ~/bin/ or /usr/local/bin/)\r\n* ```cd``` to your local c5 install public_html folder\r\n* run ```consh config``` to create a config file\r\n* running ```consh``` will show a list of currently implemented commands\r\n\r\nthat's it! You should now be able to run consh commands\r\n\r\nTasks\r\n=====\r\n\r\nThe current list of tasks avilable are:\r\n```\r\nVersion             Displays the consh version\r\nFiles:Pull          Pull remote files locally\r\nDB:Push             Push local database\r\nDB:Pull             Pull remote database\r\nGenerate:Table      Generates a db.xml file for the passed in attributes\r\nGenerate:Model      Generates a skeleton model\r\nPull                Pull a remote database and files\r\nConfig              Create a configuration file\r\nDeploy              Perform a git pull on the remote server\r\n```\r\n\r\nHooks\r\n=====\r\n\r\nHooks can be fired after key points of the execution. I was needing a way to pull files from a separate file location on the server into the main files folder and update the file storage location in the database for one project.\r\n\r\nHooks should either be a Closure or in a file which resides in <project_folder>/consh/hook/hook_class_name.php\r\n\r\nA simple hook may look something like the following\r\n\r\n```\r\n<?php\r\n//filename: /home/user/workspace/project_name/consh/hook/pull.php\r\nclass HookPull\r\n{\r\n    // sync files & then update the database to use a file location which works locally\r\n    public static function post_pull()\r\n    {\r\n        $to_dir = C5_DIR . \"/\" . \"files/\";\r\n        $output = shell_exec('rsync -az '.REMOTE_USER.'@'.REMOTE_HOST.':~/secure_files/ '. $to_dir);\r\n        shell_exec('chmod 777 files/');\r\n        $db = new LocalDB();\r\n        $res = $db->execute('Update FileStorageLocations set fslDirectory=\"/home/user/workspace/project_name/files\"');\r\n        output(\"Sync of secure files and update of storage location complete\", 'success');\r\n    }\r\n}\r\n```\r\nIn the consh settings file add something like\r\n\r\n```\r\nHook::register('after_pull', null, 'HookPull', 'post_pull');\r\n```\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"concrete5 shell scripts"}